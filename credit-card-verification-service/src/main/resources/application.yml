server:
  port: 8082
spring:
  application:
    name: credit-card-verification-service
  datasource:
    url: jdbc:mysql://localhost:3306/cc_verification?createDatabaseIfNotExist=true
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQLDialect
  cloud:
    stream:
      function:
        definition: verifyCreditCardApplication  # This is the function name of our Function (which do the processing part)
      bindings:
        verifyCreditCardApplication-in-0: # here 'in' is used since it consumes a queue
          destination: CreditCardApplication # This is the queue name where this service consumes. this should same as queue used in 'apply-credit-card-service'
          group: creditCard # This is the group that above queue belongs to
        verifyCreditCardApplication-out-0:
          destination: CreditCardVerification # This is the queue name where this service publish the messages
          group: creditCard # This is the group that above queue belongs to
      rabbit:
        bindings:
          verifyCreditCardApplication-in-0:
            consumer:
              autoBindDlq: true # This is the only property we need to add to setup the dead letter queue. once restarted we can see another queue has created in the rabbit dashboard